# Run tests, build components bundle, and deploy it to sandbox

name: 'Components test, build, and deploy'

on:
  pull_request:
    paths:
      - 'Makefile'
      - 'components/**'
      - 'webpack-config/**'
      - 'package.json'
      - '.github/workflows/components-test-build-deploy.yaml'
  push:
    paths:
      - 'components/**'
      - 'webpack-config/**'
      - 'package.json'
      - '.github/workflows/components-test-build-deploy.yaml'
    branches:
      - '**'
    tags:
      - 'components*'
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  CI: true

jobs:
  js-unit-test:
    name: 'components unit tests'
    timeout-minutes: 30
    runs-on: 'ubuntu-18.04'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '14'
      - name: 'cache yarn cache'
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.yarn-cache
            ${{ github.workspace }}/.npm-cache
          key: js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-
      - name: 'setup-js'
        run: |
          npm config set cache ./.npm-cache
          yarn config set cache-folder ./.yarn-cache
          make setup-js
      - name: 'run components unit tests'
        run: |
          yarn jest --coverage=true --ci=true --collectCoverageFrom="components/src/**/*.(js|ts|tsx)" components/src
      - name: 'Upload coverage report'
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage/lcov.info
          flags: components

  build-components:
    name: 'build components artifact'
    runs-on: 'ubuntu-18.04'
    if: github.event_name != 'pull_request'
    needs: ['js-unit-test']
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '14'
      - name: 'cache yarn cache'
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.yarn-cache
            ${{ github.workspace }}/.npm-cache
          key: js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-
      - name: 'setup-js'
        run: |
          npm config set cache ./.npm-cache
          yarn config set cache-folder ./.yarn-cache
          make setup-js
      - name: 'build components'
        run: make -C components
      - name: 'upload github artifact'
        uses: actions/upload-artifact@v2
        with:
          name: 'components-artifact'
          path: storybook-static
  deploy-components:
    name: 'deploy components artifact to S3'
    runs-on: 'ubuntu-18.04'
    needs: ['js-unit-test', 'build-components']
    if: github.event_name != 'pull_request'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-node@v1'
        with:
          node-version: '14'
      - name: 'set complex environment variables'
        id: 'set-vars'
        uses: actions/github-script@v3.1
        with:
          script: |
            const { buildComplexEnvVars } = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/utils.js`)
            buildComplexEnvVars(core, context)
      - name: 'download components build'
        uses: 'actions/download-artifact@v2'
        with:
          name: components-artifact
          path: ./dist
      - name: 'deploy builds to s3'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_SANDBOX_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SANDBOX_SECRET }}
          AWS_DEFAULT_REGION: us-east-2
        run: |
          aws s3 sync ./dist s3://opentrons-components/${{ env.OT_BRANCH}} --acl public-read
